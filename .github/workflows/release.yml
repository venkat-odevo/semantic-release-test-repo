name: Release

on:
  workflow_dispatch:

permissions: write-all

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Get Service Account Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ vars.SA_ACCESS_TOKEN_ID }}
          application_private_key: ${{ secrets.SA_ACCESS_TOKEN }}

      - name: Run Semantic Release to Determine Next release Version
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: |
          npx semantic-release --dry-run || true
          VERSION=$(npx semantic-release --dry-run | grep -oP '(?<=The next release version is )\S+')
          echo "$VERSION" > .next_version
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build project with Release version
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "Building project with version ${VERSION}"
          mvn -f my-app/pom.xml versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false
          mvn -f my-app/pom.xml clean install"

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: npx semantic-release
